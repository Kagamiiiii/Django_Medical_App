# Generated by Django 2.1.3 on 2018-11-07 09:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200)),
                ('password', models.CharField(max_length=200)),
                ('firstname', models.CharField(max_length=200)),
                ('lastname', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Distance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Include',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('altitude', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Queued for Processing', 'Queued for Processing'), (' Processing by Warehouse', ' Processing by Warehouse'), ('Queued for Dispatched', 'Queued for Dispatched'), ('Dispatched', 'Dispatched'), ('Delivered', 'Delivered')], default='Queued for Processing', max_length=30)),
                ('priority', models.CharField(choices=[('High', 'high'), ('Medium', 'mid'), ('Low', 'low')], default='Low', max_length=4)),
                ('orderedDatetime', models.DateTimeField()),
                ('dispatchedDatetime', models.DateTimeField(null=True)),
                ('deliveredDatetime', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=200)),
                ('detail', models.CharField(max_length=200)),
                ('image', models.CharField(max_length=200)),
                ('weight', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CMAccount',
            fields=[
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='ASP_webApp.Account')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ASP_webApp.Location')),
            ],
        ),
        migrations.CreateModel(
            name='DispatcherAccount',
            fields=[
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='ASP_webApp.Account')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ASP_webApp.Location')),
            ],
        ),
        migrations.CreateModel(
            name='OrderBy',
            fields=[
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='ASP_webApp.Order')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ASP_webApp.CMAccount')),
            ],
        ),
        migrations.CreateModel(
            name='OrderTo',
            fields=[
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='ASP_webApp.Order')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ASP_webApp.Location')),
            ],
        ),
        migrations.CreateModel(
            name='WHPAccount',
            fields=[
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='ASP_webApp.Account')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ASP_webApp.Location')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='ordering_clinic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ASP_webApp.Location'),
        ),
        migrations.AddField(
            model_name='include',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ASP_webApp.Order'),
        ),
        migrations.AddField(
            model_name='include',
            name='supply',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ASP_webApp.Supply'),
        ),
        migrations.AddField(
            model_name='distance',
            name='distanceFrom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ASP_webApp.Location'),
        ),
        migrations.AddField(
            model_name='distance',
            name='distanceTo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distanceTo', to='ASP_webApp.Location'),
        ),
        migrations.AlterUniqueTogether(
            name='include',
            unique_together={('order', 'supply')},
        ),
    ]
